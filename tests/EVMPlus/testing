solc --strict-assembly BlackScholes.yul >> BlackScholes.txt

go test
go test -run regexp
go test -bench regexp
// no tests
go test -run ^$ -bench regexp

make geth
./build/bin/geth --http --http.api web3,eth,net --datadir /~/chaindata
./build/bin/geth --http --http.corsdomain="https://remix.ethereum.org" --http.api web3,eth,debug,net --vmdebug --datadir /Users/1m1/Downloads/chaindata --dev console
echo $((16#A))

cd cmd/geth
go run . --http --http.corsdomain="https://remix.ethereum.org" --http.api web3,eth,debug,personal,net --vmdebug --datadir /Users/1m1/Downloads/chaindata --dev --nodiscover --password /Users/1m1/Downloads/geth_dev_password.txt console
go run . --http --http.api web3,eth,debug,personal,net --vmdebug --datadir /Users/1m1/Downloads/chaindata --dev --nodiscover console
go run . --datadir /Users/1m1/Downloads/chaindata --dev --nodiscover console
go run . --datadir /Users/1m1/Downloads/chaindata --dev --nodiscover account new
go run . --datadir /Users/1m1/Downloads/chaindata --dev --nodiscover account list

debug.traceTransaction

// BlackScholes YUL
// shanghai
var bytecode='0x61052261000e5f396105225ff3fe610007610034565b6395ba71af8114610016575f80fd5b61018060045f3761002561036b565b815f5580600155505050610521565b5f7c01000000000000000000000000000000000000000000000000000000005f3504905090565b6101405160c05160e051610070838284610506565b61007e855f6002848661045c565b60805160a05161009189828486886103bb565b61010051610120516100a68d828486886103e1565b8161018052806101a052505050505050505050505050505050565b61014051610160515f516020516040516060516100e1868284868861045c565b6100ed8789838561041d565b816101c052806101e05250505050505050505050565b610140516101605160c05160e0516101005161012051610125858783856104c6565b610132888284888a6103e1565b8161018052806101a05250505050505050505050565b610140516101605161015861005b565b610180516101a0516101686100c1565b6101c0516101e05161017d86848684866103bb565b610185610103565b610180516101a05161019a8a8284868861045c565b816101c052806101e052505050505050505050505050565b610140516101c0516101e051610180516101a0516101d38582848688610431565b8161018052806101a05250505050505050565b5f8061014051610160517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd79b57ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb61023f84898984866103e1565b61024b85878385610409565b610259885f600184866103bb565b6102648a82846103f7565b9b509b50505050505050505050509250929050565b610140516101c0516101e05161028f81836101e6565b5f516020516102a187848684866103e1565b816101c052806101e052505050505050505050565b610140516101605160805160a0516102ce81836103d1565b61010051610120516102e388828486886103e1565b6102ef898b8385610409565b6040516060516103028e848684866103e1565b8161018052806101a05250505050505050505050505050505050565b6101405161016051610180516101a0516103366102b6565b610180516101a05161034883856101e6565b61035588848684866103e1565b8161018052806101a05250505050505050505050565b5f8061014051610379610148565b6103816101b2565b610389610279565b61039161031e565b610180516101a0516101c0516101e0516103ae8584868486610431565b9650965050505050509091565b5f808686868686d0915091509550959350505050565b5f808383d1915091509250929050565b5f808686868686d2915091509550959350505050565b5f80848484d391509150935093915050565b5f8085858585d49150915094509492505050565b5f8085858585d59150915094509492505050565b5f8061043d86866103d1565b9150915061044e87828487876103bb565b915091509550959350505050565b5f806104698787876103f7565b9150915061047a87828487876103e1565b915091509550959350505050565b5f806104968888868661041d565b915091506104a787828489896103e1565b915091506104b788888385610409565b91509150965096945050505050565b5f807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6104f887878360058989610488565b925092505094509492505050565b5f8061051585858587876103e1565b91509150935093915050565b';
// london
var bytecode='0x6105386100106000396105386000f3fe610007610037565b6395ba71af811461001757600080fd5b6101806004600037610027610375565b8160005580600155505050610537565b60007c010000000000000000000000000000000000000000000000000000000060003504905090565b6101405160c05160e05161007583828461051b565b6100848560006002848661046e565b60805160a05161009789828486886103c6565b61010051610120516100ac8d828486886103ee565b8161018052806101a052505050505050505050505050505050565b61014051610160516000516020516040516060516100e8868284868861046e565b6100f48789838561042d565b816101c052806101e05250505050505050505050565b610140516101605160c05160e051610100516101205161012c858783856104da565b610139888284888a6103ee565b8161018052806101a05250505050505050505050565b610140516101605161015f610060565b610180516101a05161016f6100c7565b6101c0516101e05161018486848684866103c6565b61018c61010a565b610180516101a0516101a18a8284868861046e565b816101c052806101e052505050505050505050505050565b610140516101c0516101e051610180516101a0516101da8582848688610442565b8161018052806101a05250505050505050565b60008061014051610160517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd79b57ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb61024784898984866103ee565b61025385878385610418565b610262886000600184866103c6565b61026d8a8284610405565b9b509b50505050505050505050509250929050565b610140516101c0516101e05161029881836101ed565b6000516020516102ab87848684866103ee565b816101c052806101e052505050505050505050565b610140516101605160805160a0516102d881836103dd565b61010051610120516102ed88828486886103ee565b6102f9898b8385610418565b60405160605161030c8e848684866103ee565b8161018052806101a05250505050505050505050505050505050565b6101405161016051610180516101a0516103406102c0565b610180516101a05161035283856101ed565b61035f88848684866103ee565b8161018052806101a05250505050505050505050565b6000806101405161038461014f565b61038c6101b9565b610394610282565b61039c610328565b610180516101a0516101c0516101e0516103b98584868486610442565b9650965050505050509091565b6000808686868686d0915091509550959350505050565b6000808383d1915091509250929050565b6000808686868686d2915091509550959350505050565b600080848484d391509150935093915050565b60008085858585d49150915094509492505050565b60008085858585d59150915094509492505050565b60008061044f86866103dd565b9150915061046087828487876103c6565b915091509550959350505050565b60008061047c878787610405565b9150915061048d87828487876103ee565b915091509550959350505050565b6000806104aa8888868661042d565b915091506104bb87828489896103ee565b915091506104cb88888385610418565b91509150965096945050505050565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61050d8787836005898961049b565b925092505094509492505050565b60008061052b85858587876103ee565b91509150935093915050565b';
var contract = eth.contract([]);
var gas = eth.estimateGas({ data: bytecode });
var tx = { from: eth.accounts[0], data: bytecode, gas: gas };
var deployed_contract = contract.new(tx);

eth.sendTransaction({
  from: eth.accounts[0],
  to: deployed_contract.address,
  data: "0x95ba71af0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A000000000000000000000000000000000000000000000000000000000000000A",
  gas: "1000000"
});

var deployed_contract={address:"0x5e20ee9d02234051aef23150a72a6139c0fecb59"}

eth.getStorageAt(deployed_contract.address,0)
eth.getStorageAt(deployed_contract.address,1)
eth.getStorageAt(deployed_contract.address,2)
eth.getStorageAt(deployed_contract.address,3)
eth.getStorageAt(deployed_contract.address,4)
eth.getStorageAt(deployed_contract.address,5)
eth.getStorageAt(deployed_contract.address,6)
eth.getStorageAt(deployed_contract.address,7)
eth.getStorageAt(deployed_contract.address,8)
eth.getStorageAt(deployed_contract.address,9)
eth.getStorageAt(deployed_contract.address,10)
eth.getStorageAt(deployed_contract.address,11)
eth.getStorageAt(deployed_contract.address,12)
eth.getStorageAt(deployed_contract.address,13)

var result = eth.call({
  to: deployed_contract.address,
  data: "0xc4df80c7"
});

eth.getCode(deployed_contract.address)
eth.getCode("0x5e20ee9d02234051aEf23150a72a6139c0fECb59")
var deployed_contract={address:"0x5e20ee9d02234051aEf23150a72a6139c0fECb59"}
// S: underlying price = 1
0000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000
// K: strike = 1
0000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000
// r: interest = 0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
// s: volatility = 0.1
0000000000000000000000000000000000000000000000000000000000000001
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
// T: time = 1
0000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000
// precision = 10
000000000000000000000000000000000000000000000000000000000000000A
// steps = 10
000000000000000000000000000000000000000000000000000000000000000A
// Sc, Sq, Kc, Kq, rc, rq, sc, sq, Tc, Tq, precision, steps