
======= Neuron.yul (EVM) =======

Pretty printed source:
object "Neuron" {
    code {
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }
    object "runtime" {
        code {
            switch selector()
            case 0x61d311e8 {
                let num_weights := div(calldatasize(), 64)
                for { let i := 0 } lt(i, num_weights) { i := add(i, 1) }
                {
                    let memory_address := add(mul(i, 64), 4)
                    let weight_c := calldataload(memory_address)
                    let index_address := mul(i, 2)
                    sstore(index_address, weight_c)
                    memory_address := add(memory_address, 32)
                    let weight_q := calldataload(memory_address)
                    index_address := add(index_address, 1)
                    sstore(index_address, weight_q)
                }
            }
            case 0xc5b5bb77 {
                let precision := calldataload(4)
                let steps := calldataload(36)
                let num_inputs_times_64 := sub(calldatasize(), 68)
                calldatacopy(0, 68, num_inputs_times_64)
                let num_inputs := div(num_inputs_times_64, 64)
                let yc, yq := neuron(num_inputs, precision, steps)
                mstore(0, yc)
                mstore(32, yq)
                log0(0, 32)
                log0(32, 32)
                return(0, 64)
            }
            default { revert(0, 0) }
            function selector() -> s
            {
                s := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)
            }
            function neuron(num_inputs, precision, steps) -> yc, yq
            {
                let xc, xq := weighted_sum(num_inputs, precision, steps)
                yc, yq := phi(xc, xq, precision, steps)
            }
            function weighted_sum(num_inputs, precision, steps) -> total_c, total_q
            {
                total_c := 0
                total_q := 0
                for { let i := 0 } lt(i, num_inputs) { i := add(i, 1) }
                {
                    let index_address := mul(i, 2)
                    let weight_c := sload(index_address)
                    index_address := add(index_address, 1)
                    let weight_q := sload(index_address)
                    let memory_address := mul(i, 64)
                    let input_c := mload(memory_address)
                    memory_address := add(memory_address, 32)
                    let input_q := mload(memory_address)
                    let product_c, product_q := dec_mul(weight_c, weight_q, input_c, input_q, precision)
                    total_c, total_q := dec_add(total_c, total_q, product_c, product_q, precision)
                }
            }
            function phi(xc, xq, precision, steps) -> yc, yq
            {
                let mxc, mxq := dec_neg(xc, xq)
                let emxc, emxq := dec_exp(mxc, mxq, precision, steps)
                let oemxc, oemxq := dec_add(1, 0, emxc, emxq, precision)
                yc, yq := dec_inv(oemxc, oemxq, precision)
            }
            function dec_add(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := verbatim_5i_2o("\xd0", ac, aq, bc, bq, precision)
            }
            function dec_neg(ac, aq) -> bc, bq
            {
                bc, bq := verbatim_2i_2o("\xd1", ac, aq)
            }
            function dec_mul(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := verbatim_5i_2o("\xd2", ac, aq, bc, bq, precision)
            }
            function dec_inv(ac, aq, precision) -> bc, bq
            {
                bc, bq := verbatim_3i_2o("\xd3", ac, aq, precision)
            }
            function dec_exp(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd4", ac, aq, precision, steps)
            }
            function dec_ln(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd5", ac, aq, precision, steps)
            }
            function dec_sin(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd6", ac, aq, precision, steps)
            }
            function dec_sub(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := dec_neg(bc, bq)
                cc, cq := dec_add(ac, aq, cc, cq, precision)
            }
            function dec_div(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := dec_inv(bc, bq, precision)
                cc, cq := dec_mul(ac, aq, cc, cq, precision)
            }
            function pow(ac, aq, bc, bq, precision, steps) -> cc, cq
            {
                cc, cq := dec_ln(ac, aq, precision, steps)
                cc, cq := dec_mul(bc, bq, cc, cq, precision)
                cc, cq := dec_exp(cc, cq, precision, steps)
            }
            function dec_sqrt(ac, aq, precision, steps) -> bc, bq
            {
                let MINUS_ONE := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
                bc, bq := pow(ac, aq, 5, MINUS_ONE, precision, steps)
            }
            function dec_sqr(ac, aq, precision) -> bc, bq
            {
                bc, bq := dec_mul(ac, aq, ac, aq, precision)
            }
        }
    }
}


Binary representation:
61020f61001060003961020f6000f3fe6100076100a4565b6361d311e881146100225763c5b5bb77811461006857600080fd5b6040360460005b818110156100615760046040820201803560028302818155602083019250823560018201915080825550505050600181019050610029565b505061009e565b60043560243560443603806044600037604081046100878385836100cd565b816000528060205260206000a0602080a060406000f35b5061020e565b60007c010000000000000000000000000000000000000000000000000000000060003504905090565b6000806100db8585856100f5565b6100e787878385610161565b935093505050935093915050565b600080600091506000905060005b8381101561015857600281028054600182019150815460408402805160208201915081516101348b828487896101cf565b6101418d82848d8f6101a7565b9a509a505050505050505050600181019050610103565b50935093915050565b60008061016e84846101be565b61017a888883856101f9565b610189898284600060016101a7565b6101948b82846101e6565b9750975050505050505094509492505050565b6000808686868686d0915091509550959350505050565b6000808383d1915091509250929050565b6000808686868686d2915091509550959350505050565b600080848484d391509150935093915050565b60008085858585d49150915094509492505050565b

Text representation:
    /* "Neuron.yul":145:164   */
  dataSize(sub_0)
    /* "Neuron.yul":122:143   */
  dataOffset(sub_0)
    /* "Neuron.yul":119:120   */
  0x00
    /* "Neuron.yul":110:165   */
  codecopy
    /* "Neuron.yul":184:203   */
  dataSize(sub_0)
    /* "Neuron.yul":181:182   */
  0x00
    /* "Neuron.yul":174:204   */
  return
stop

sub_0: assembly {
        /* "Neuron.yul":383:393   */
      tag_17
      tag_1
      jump	// in
    tag_17:
        /* "Neuron.yul":461:471   */
      0x61d311e8
        /* "Neuron.yul":456:1180   */
      dup2
      eq
      tag_19
      jumpi
        /* "Neuron.yul":1348:1358   */
      0xc5b5bb77
        /* "Neuron.yul":1343:2384   */
      dup2
      eq
      tag_20
      jumpi
        /* "Neuron.yul":2433:2434   */
      0x00
        /* "Neuron.yul":2430:2431   */
      dup1
        /* "Neuron.yul":2423:2435   */
      revert
        /* "Neuron.yul":456:1180   */
    tag_19:
        /* "Neuron.yul":529:531   */
      0x40
        /* "Neuron.yul":513:527   */
      calldatasize
        /* "Neuron.yul":509:532   */
      div
        /* "Neuron.yul":621:622   */
      0x00
        /* "Neuron.yul":606:1166   */
    tag_21:
        /* "Neuron.yul":631:642   */
      dup2
        /* "Neuron.yul":628:629   */
      dup2
        /* "Neuron.yul":625:643   */
      lt
        /* "Neuron.yul":606:1166   */
      iszero
      tag_23
      jumpi
        /* "Neuron.yul":739:740   */
      0x04
        /* "Neuron.yul":734:736   */
      0x40
        /* "Neuron.yul":731:732   */
      dup3
        /* "Neuron.yul":727:737   */
      mul
        /* "Neuron.yul":723:741   */
      add
        /* "Neuron.yul":791:805   */
      dup1
        /* "Neuron.yul":778:806   */
      calldataload
        /* "Neuron.yul":855:856   */
      0x02
        /* "Neuron.yul":852:853   */
      dup4
        /* "Neuron.yul":848:857   */
      mul
        /* "Neuron.yul":900:908   */
      dup2
        /* "Neuron.yul":885:898   */
      dup2
        /* "Neuron.yul":878:909   */
      sstore
        /* "Neuron.yul":969:971   */
      0x20
        /* "Neuron.yul":953:967   */
      dup4
        /* "Neuron.yul":949:972   */
      add
        /* "Neuron.yul":931:972   */
      swap3
      pop
        /* "Neuron.yul":1022:1036   */
      dup3
        /* "Neuron.yul":1009:1037   */
      calldataload
        /* "Neuron.yul":1094:1095   */
      0x01
        /* "Neuron.yul":1079:1092   */
      dup3
        /* "Neuron.yul":1075:1096   */
      add
        /* "Neuron.yul":1058:1096   */
      swap2
      pop
        /* "Neuron.yul":1139:1147   */
      dup1
        /* "Neuron.yul":1124:1137   */
      dup3
        /* "Neuron.yul":1117:1148   */
      sstore
        /* "Neuron.yul":679:1166   */
      pop
      pop
      pop
      pop
        /* "Neuron.yul":658:659   */
      0x01
        /* "Neuron.yul":655:656   */
      dup2
        /* "Neuron.yul":651:660   */
      add
        /* "Neuron.yul":646:660   */
      swap1
      pop
        /* "Neuron.yul":606:1166   */
      jump(tag_21)
    tag_23:
        /* "Neuron.yul":610:624   */
      pop
        /* "Neuron.yul":472:1180   */
      pop
        /* "Neuron.yul":456:1180   */
      jump(tag_18)
        /* "Neuron.yul":1343:2384   */
    tag_20:
        /* "Neuron.yul":1407:1408   */
      0x04
        /* "Neuron.yul":1394:1409   */
      calldataload
        /* "Neuron.yul":1452:1454   */
      0x24
        /* "Neuron.yul":1439:1455   */
      calldataload
        /* "Neuron.yul":1536:1538   */
      0x44
        /* "Neuron.yul":1520:1534   */
      calldatasize
        /* "Neuron.yul":1516:1539   */
      sub
        /* "Neuron.yul":1677:1696   */
      dup1
        /* "Neuron.yul":1673:1675   */
      0x44
        /* "Neuron.yul":1670:1671   */
      0x00
        /* "Neuron.yul":1657:1697   */
      calldatacopy
        /* "Neuron.yul":1784:1786   */
      0x40
        /* "Neuron.yul":1763:1782   */
      dup2
        /* "Neuron.yul":1759:1787   */
      div
        /* "Neuron.yul":1919:1955   */
      tag_24
        /* "Neuron.yul":1949:1954   */
      dup4
        /* "Neuron.yul":1938:1947   */
      dup6
        /* "Neuron.yul":1926:1936   */
      dup4
        /* "Neuron.yul":1919:1955   */
      tag_2
      jump	// in
    tag_24:
        /* "Neuron.yul":1999:2001   */
      dup2
        /* "Neuron.yul":1996:1997   */
      0x00
        /* "Neuron.yul":1989:2002   */
      mstore
        /* "Neuron.yul":2030:2032   */
      dup1
        /* "Neuron.yul":2026:2028   */
      0x20
        /* "Neuron.yul":2019:2033   */
      mstore
        /* "Neuron.yul":2271:2273   */
      0x20
        /* "Neuron.yul":2268:2269   */
      0x00
        /* "Neuron.yul":2263:2274   */
      log0
        /* "Neuron.yul":2306:2308   */
      0x20
        /* "Neuron.yul":2302:2304   */
      dup1
        /* "Neuron.yul":2297:2309   */
      log0
        /* "Neuron.yul":2367:2369   */
      0x40
        /* "Neuron.yul":2364:2365   */
      0x00
        /* "Neuron.yul":2357:2370   */
      return
        /* "Neuron.yul":376:2449   */
    tag_18:
      pop
        /* "Neuron.yul":2462:2605   */
      jump(tag_25)
    tag_1:
        /* "Neuron.yul":2485:2486   */
      0x00
        /* "Neuron.yul":2531:2590   */
      0x0100000000000000000000000000000000000000000000000000000000
        /* "Neuron.yul":2527:2528   */
      0x00
        /* "Neuron.yul":2514:2529   */
      calldataload
        /* "Neuron.yul":2510:2591   */
      div
        /* "Neuron.yul":2505:2591   */
      swap1
      pop
        /* "Neuron.yul":2462:2605   */
      swap1
      jump	// out
        /* "Neuron.yul":2729:3131   */
    tag_2:
        /* "Neuron.yul":2778:2780   */
      0x00
        /* "Neuron.yul":2782:2784   */
      dup1
        /* "Neuron.yul":2817:2859   */
      tag_28
        /* "Neuron.yul":2853:2858   */
      dup6
        /* "Neuron.yul":2842:2851   */
      dup6
        /* "Neuron.yul":2830:2840   */
      dup6
        /* "Neuron.yul":2817:2859   */
      tag_3
      jump	// in
    tag_28:
        /* "Neuron.yul":2886:2915   */
      tag_29
        /* "Neuron.yul":2909:2914   */
      dup8
        /* "Neuron.yul":2898:2907   */
      dup8
        /* "Neuron.yul":2894:2896   */
      dup4
        /* "Neuron.yul":2890:2892   */
      dup6
        /* "Neuron.yul":2886:2915   */
      tag_4
      jump	// in
    tag_29:
        /* "Neuron.yul":2876:2915   */
      swap4
      pop
      swap4
      pop
        /* "Neuron.yul":2785:3131   */
      pop
      pop
        /* "Neuron.yul":2729:3131   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":3145:4735   */
    tag_3:
        /* "Neuron.yul":3200:3207   */
      0x00
        /* "Neuron.yul":3209:3216   */
      dup1
        /* "Neuron.yul":3246:3247   */
      0x00
        /* "Neuron.yul":3235:3247   */
      swap2
      pop
        /* "Neuron.yul":3275:3276   */
      0x00
        /* "Neuron.yul":3264:3276   */
      swap1
      pop
        /* "Neuron.yul":3309:3310   */
      0x00
        /* "Neuron.yul":3294:4721   */
    tag_31:
        /* "Neuron.yul":3319:3329   */
      dup4
        /* "Neuron.yul":3316:3317   */
      dup2
        /* "Neuron.yul":3313:3330   */
      lt
        /* "Neuron.yul":3294:4721   */
      iszero
      tag_33
      jumpi
        /* "Neuron.yul":3416:3417   */
      0x02
        /* "Neuron.yul":3413:3414   */
      dup2
        /* "Neuron.yul":3409:3418   */
      mul
        /* "Neuron.yul":3461:3474   */
      dup1
        /* "Neuron.yul":3455:3475   */
      sload
        /* "Neuron.yul":3532:3533   */
      0x01
        /* "Neuron.yul":3517:3530   */
      dup3
        /* "Neuron.yul":3513:3534   */
      add
        /* "Neuron.yul":3496:3534   */
      swap2
      pop
        /* "Neuron.yul":3577:3590   */
      dup2
        /* "Neuron.yul":3571:3591   */
      sload
        /* "Neuron.yul":3662:3664   */
      0x40
        /* "Neuron.yul":3659:3660   */
      dup5
        /* "Neuron.yul":3655:3665   */
      mul
        /* "Neuron.yul":3707:3721   */
      dup1
        /* "Neuron.yul":3701:3722   */
      mload
        /* "Neuron.yul":3781:3783   */
      0x20
        /* "Neuron.yul":3765:3779   */
      dup3
        /* "Neuron.yul":3761:3784   */
      add
        /* "Neuron.yul":3743:3784   */
      swap2
      pop
        /* "Neuron.yul":3826:3840   */
      dup2
        /* "Neuron.yul":3820:3841   */
      mload
        /* "Neuron.yul":3891:3947   */
      tag_34
        /* "Neuron.yul":3937:3946   */
      dup12
        /* "Neuron.yul":3928:3935   */
      dup3
        /* "Neuron.yul":3919:3926   */
      dup5
        /* "Neuron.yul":3909:3917   */
      dup8
        /* "Neuron.yul":3899:3907   */
      dup10
        /* "Neuron.yul":3891:3947   */
      tag_7
      jump	// in
    tag_34:
        /* "Neuron.yul":3989:4047   */
      tag_35
        /* "Neuron.yul":4037:4046   */
      dup14
        /* "Neuron.yul":4026:4035   */
      dup3
        /* "Neuron.yul":4015:4024   */
      dup5
        /* "Neuron.yul":4006:4013   */
      dup14
        /* "Neuron.yul":3997:4004   */
      dup16
        /* "Neuron.yul":3989:4047   */
      tag_5
      jump	// in
    tag_35:
        /* "Neuron.yul":3969:4047   */
      swap11
      pop
      swap11
      pop
        /* "Neuron.yul":3366:4721   */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
        /* "Neuron.yul":3345:3346   */
      0x01
        /* "Neuron.yul":3342:3343   */
      dup2
        /* "Neuron.yul":3338:3347   */
      add
        /* "Neuron.yul":3333:3347   */
      swap1
      pop
        /* "Neuron.yul":3294:4721   */
      jump(tag_31)
    tag_33:
        /* "Neuron.yul":3298:3312   */
      pop
        /* "Neuron.yul":3145:4735   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":4749:5130   */
    tag_4:
        /* "Neuron.yul":4791:4793   */
      0x00
        /* "Neuron.yul":4795:4797   */
      dup1
        /* "Neuron.yul":4832:4847   */
      tag_37
        /* "Neuron.yul":4844:4846   */
      dup5
        /* "Neuron.yul":4840:4842   */
      dup5
        /* "Neuron.yul":4832:4847   */
      tag_6
      jump	// in
    tag_37:
        /* "Neuron.yul":4888:4923   */
      tag_38
        /* "Neuron.yul":4917:4922   */
      dup9
        /* "Neuron.yul":4906:4915   */
      dup9
        /* "Neuron.yul":4901:4904   */
      dup4
        /* "Neuron.yul":4896:4899   */
      dup6
        /* "Neuron.yul":4888:4923   */
      tag_9
      jump	// in
    tag_38:
        /* "Neuron.yul":4971:5007   */
      tag_39
        /* "Neuron.yul":4997:5006   */
      dup10
        /* "Neuron.yul":4991:4995   */
      dup3
        /* "Neuron.yul":4985:4989   */
      dup5
        /* "Neuron.yul":4982:4983   */
      0x00
        /* "Neuron.yul":4979:4980   */
      0x01
        /* "Neuron.yul":4971:5007   */
      tag_5
      jump	// in
    tag_39:
        /* "Neuron.yul":5049:5081   */
      tag_40
        /* "Neuron.yul":5071:5080   */
      dup12
        /* "Neuron.yul":5064:5069   */
      dup3
        /* "Neuron.yul":5057:5062   */
      dup5
        /* "Neuron.yul":5049:5081   */
      tag_8
      jump	// in
    tag_40:
        /* "Neuron.yul":5039:5081   */
      swap8
      pop
      swap8
      pop
        /* "Neuron.yul":4798:5130   */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "Neuron.yul":4749:5130   */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5205:5351   */
    tag_5:
        /* "Neuron.yul":5252:5254   */
      0x00
        /* "Neuron.yul":5256:5258   */
      dup1
        /* "Neuron.yul":5327:5336   */
      dup7
        /* "Neuron.yul":5323:5325   */
      dup7
        /* "Neuron.yul":5319:5321   */
      dup7
        /* "Neuron.yul":5315:5317   */
      dup7
        /* "Neuron.yul":5311:5313   */
      dup7
        /* "Neuron.yul":5287:5337   */
      verbatimbytecode_d0
        /* "Neuron.yul":5277:5337   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5205:5351   */
      swap6
      pop
      swap6
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5387:5495   */
    tag_6:
        /* "Neuron.yul":5415:5417   */
      0x00
        /* "Neuron.yul":5419:5421   */
      dup1
        /* "Neuron.yul":5478:5480   */
      dup4
        /* "Neuron.yul":5474:5476   */
      dup4
        /* "Neuron.yul":5450:5481   */
      verbatimbytecode_d1
        /* "Neuron.yul":5440:5481   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5387:5495   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "Neuron.yul":5534:5680   */
    tag_7:
        /* "Neuron.yul":5581:5583   */
      0x00
        /* "Neuron.yul":5585:5587   */
      dup1
        /* "Neuron.yul":5656:5665   */
      dup7
        /* "Neuron.yul":5652:5654   */
      dup7
        /* "Neuron.yul":5648:5650   */
      dup7
        /* "Neuron.yul":5644:5646   */
      dup7
        /* "Neuron.yul":5640:5642   */
      dup7
        /* "Neuron.yul":5616:5666   */
      verbatimbytecode_d2
        /* "Neuron.yul":5606:5666   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5534:5680   */
      swap6
      pop
      swap6
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5719:5849   */
    tag_8:
        /* "Neuron.yul":5758:5760   */
      0x00
        /* "Neuron.yul":5762:5764   */
      dup1
        /* "Neuron.yul":5825:5834   */
      dup5
        /* "Neuron.yul":5821:5823   */
      dup5
        /* "Neuron.yul":5817:5819   */
      dup5
        /* "Neuron.yul":5793:5835   */
      verbatimbytecode_d3
        /* "Neuron.yul":5783:5835   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5719:5849   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":5893:6037   */
    tag_9:
        /* "Neuron.yul":5939:5941   */
      0x00
        /* "Neuron.yul":5943:5945   */
      dup1
        /* "Neuron.yul":6017:6022   */
      dup6
        /* "Neuron.yul":6006:6015   */
      dup6
        /* "Neuron.yul":6002:6004   */
      dup6
        /* "Neuron.yul":5998:6000   */
      dup6
        /* "Neuron.yul":5974:6023   */
      verbatimbytecode_d4
        /* "Neuron.yul":5964:6023   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5893:6037   */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":7542:7664   */
    tag_25:
}

