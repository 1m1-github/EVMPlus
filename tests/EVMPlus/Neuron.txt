
======= Neuron.yul (EVM) =======

Pretty printed source:
object "Neuron" {
    code {
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }
    object "runtime" {
        code {
            switch selector()
            case 0x61d311e8 {
                let num_weights := div(calldatasize(), 64)
                for { let i := 0 } lt(i, num_weights) { i := add(i, 1) }
                {
                    let memory_address := add(mul(i, 64), 4)
                    let weight_c := calldataload(memory_address)
                    let index_address := mul(i, 2)
                    sstore(index_address, weight_c)
                    memory_address := add(memory_address, 32)
                    let weight_q := calldataload(memory_address)
                    index_address := add(index_address, 1)
                    sstore(index_address, weight_q)
                }
            }
            case 0xc5b5bb77 {
                let precision := calldataload(4)
                let steps := calldataload(36)
                let num_inputs_times_64 := sub(calldatasize(), 68)
                calldatacopy(0, 68, num_inputs_times_64)
                let num_inputs := div(num_inputs_times_64, 64)
                let yc, yq := neuron(num_inputs, precision, steps)
                mstore(0, yc)
                mstore(32, yc)
                return(0, 64)
            }
            default { revert(0, 0) }
            function selector() -> s
            {
                s := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)
            }
            function neuron(num_inputs, precision, steps) -> yc, yq
            {
                let xc, xq := weighted_sum(num_inputs, precision, steps)
                yc, yq := phi(xc, xq, precision, steps)
            }
            function weighted_sum(num_inputs, precision, steps) -> total_c, total_q
            {
                total_c := 0
                total_q := 0
                for { let i := 0 } lt(i, num_inputs) { i := add(i, 1) }
                {
                    let index_address := mul(i, 2)
                    let weight_c := sload(index_address)
                    index_address := add(index_address, 1)
                    let weight_q := sload(index_address)
                    let memory_address := mul(i, 64)
                    let input_c := mload(memory_address)
                    memory_address := add(memory_address, 32)
                    let input_q := mload(memory_address)
                    let product_c, product_q := dec_mul(weight_c, weight_q, input_c, input_q, precision)
                    total_c, total_q := dec_add(total_c, total_q, product_c, product_q, precision)
                }
            }
            function phi(xc, xq, precision, steps) -> yc, yq
            {
                let mxc, mxq := dec_neg(xc, xq)
                let emxc, emxq := dec_exp(mxc, mxq, precision, steps)
                let oemxc, oemxq := dec_add(1, 0, emxc, emxq, precision)
                yc, yq := dec_inv(oemxc, oemxq, precision)
            }
            function dec_add(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := verbatim_5i_2o("\xd0", ac, aq, bc, bq, precision)
            }
            function dec_neg(ac, aq) -> bc, bq
            {
                bc, bq := verbatim_2i_2o("\xd1", ac, aq)
            }
            function dec_mul(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := verbatim_5i_2o("\xd2", ac, aq, bc, bq, precision)
            }
            function dec_inv(ac, aq, precision) -> bc, bq
            {
                bc, bq := verbatim_3i_2o("\xd3", ac, aq, precision)
            }
            function dec_exp(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd4", ac, aq, precision, steps)
            }
            function dec_ln(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd5", ac, aq, precision, steps)
            }
            function dec_sin(ac, aq, precision, steps) -> bc, bq
            {
                bc, bq := verbatim_4i_2o("\xd6", ac, aq, precision, steps)
            }
            function dec_sub(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := dec_neg(bc, bq)
                cc, cq := dec_add(ac, aq, cc, cq, precision)
            }
            function dec_div(ac, aq, bc, bq, precision) -> cc, cq
            {
                cc, cq := dec_inv(bc, bq, precision)
                cc, cq := dec_mul(ac, aq, cc, cq, precision)
            }
            function pow(ac, aq, bc, bq, precision, steps) -> cc, cq
            {
                cc, cq := dec_ln(ac, aq, precision, steps)
                cc, cq := dec_mul(bc, bq, cc, cq, precision)
                cc, cq := dec_exp(cc, cq, precision, steps)
            }
            function dec_sqrt(ac, aq, precision, steps) -> bc, bq
            {
                let MINUS_ONE := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
                bc, bq := pow(ac, aq, 5, MINUS_ONE, precision, steps)
            }
            function dec_sqr(ac, aq, precision) -> bc, bq
            {
                bc, bq := dec_mul(ac, aq, ac, aq, precision)
            }
        }
    }
}


Binary representation:
6102066100106000396102066000f3fe61000761009b565b6361d311e881146100225763c5b5bb77811461006857600080fd5b6040360460005b818110156100615760046040820201803560028302818155602083019250823560018201915080825550505050600181019050610029565b5050610095565b60043560243560443603806044600037604081046100878385836100c4565b816000528160205260406000f35b50610205565b60007c010000000000000000000000000000000000000000000000000000000060003504905090565b6000806100d28585856100ec565b6100de87878385610158565b935093505050935093915050565b600080600091506000905060005b8381101561014f576002810280546001820191508154604084028051602082019150815161012b8b828487896101c6565b6101388d82848d8f61019e565b9a509a5050505050505050506001810190506100fa565b50935093915050565b60008061016584846101b5565b610171888883856101f0565b6101808982846000600161019e565b61018b8b82846101dd565b9750975050505050505094509492505050565b6000808686868686d0915091509550959350505050565b6000808383d1915091509250929050565b6000808686868686d2915091509550959350505050565b600080848484d391509150935093915050565b60008085858585d49150915094509492505050565b

Text representation:
    /* "Neuron.yul":145:164   */
  dataSize(sub_0)
    /* "Neuron.yul":122:143   */
  dataOffset(sub_0)
    /* "Neuron.yul":119:120   */
  0x00
    /* "Neuron.yul":110:165   */
  codecopy
    /* "Neuron.yul":184:203   */
  dataSize(sub_0)
    /* "Neuron.yul":181:182   */
  0x00
    /* "Neuron.yul":174:204   */
  return
stop

sub_0: assembly {
        /* "Neuron.yul":383:393   */
      tag_17
      tag_1
      jump	// in
    tag_17:
        /* "Neuron.yul":461:471   */
      0x61d311e8
        /* "Neuron.yul":456:1180   */
      dup2
      eq
      tag_19
      jumpi
        /* "Neuron.yul":1348:1358   */
      0xc5b5bb77
        /* "Neuron.yul":1343:2315   */
      dup2
      eq
      tag_20
      jumpi
        /* "Neuron.yul":2364:2365   */
      0x00
        /* "Neuron.yul":2361:2362   */
      dup1
        /* "Neuron.yul":2354:2366   */
      revert
        /* "Neuron.yul":456:1180   */
    tag_19:
        /* "Neuron.yul":529:531   */
      0x40
        /* "Neuron.yul":513:527   */
      calldatasize
        /* "Neuron.yul":509:532   */
      div
        /* "Neuron.yul":621:622   */
      0x00
        /* "Neuron.yul":606:1166   */
    tag_21:
        /* "Neuron.yul":631:642   */
      dup2
        /* "Neuron.yul":628:629   */
      dup2
        /* "Neuron.yul":625:643   */
      lt
        /* "Neuron.yul":606:1166   */
      iszero
      tag_23
      jumpi
        /* "Neuron.yul":739:740   */
      0x04
        /* "Neuron.yul":734:736   */
      0x40
        /* "Neuron.yul":731:732   */
      dup3
        /* "Neuron.yul":727:737   */
      mul
        /* "Neuron.yul":723:741   */
      add
        /* "Neuron.yul":791:805   */
      dup1
        /* "Neuron.yul":778:806   */
      calldataload
        /* "Neuron.yul":855:856   */
      0x02
        /* "Neuron.yul":852:853   */
      dup4
        /* "Neuron.yul":848:857   */
      mul
        /* "Neuron.yul":900:908   */
      dup2
        /* "Neuron.yul":885:898   */
      dup2
        /* "Neuron.yul":878:909   */
      sstore
        /* "Neuron.yul":969:971   */
      0x20
        /* "Neuron.yul":953:967   */
      dup4
        /* "Neuron.yul":949:972   */
      add
        /* "Neuron.yul":931:972   */
      swap3
      pop
        /* "Neuron.yul":1022:1036   */
      dup3
        /* "Neuron.yul":1009:1037   */
      calldataload
        /* "Neuron.yul":1094:1095   */
      0x01
        /* "Neuron.yul":1079:1092   */
      dup3
        /* "Neuron.yul":1075:1096   */
      add
        /* "Neuron.yul":1058:1096   */
      swap2
      pop
        /* "Neuron.yul":1139:1147   */
      dup1
        /* "Neuron.yul":1124:1137   */
      dup3
        /* "Neuron.yul":1117:1148   */
      sstore
        /* "Neuron.yul":679:1166   */
      pop
      pop
      pop
      pop
        /* "Neuron.yul":658:659   */
      0x01
        /* "Neuron.yul":655:656   */
      dup2
        /* "Neuron.yul":651:660   */
      add
        /* "Neuron.yul":646:660   */
      swap1
      pop
        /* "Neuron.yul":606:1166   */
      jump(tag_21)
    tag_23:
        /* "Neuron.yul":610:624   */
      pop
        /* "Neuron.yul":472:1180   */
      pop
        /* "Neuron.yul":456:1180   */
      jump(tag_18)
        /* "Neuron.yul":1343:2315   */
    tag_20:
        /* "Neuron.yul":1407:1408   */
      0x04
        /* "Neuron.yul":1394:1409   */
      calldataload
        /* "Neuron.yul":1452:1454   */
      0x24
        /* "Neuron.yul":1439:1455   */
      calldataload
        /* "Neuron.yul":1536:1538   */
      0x44
        /* "Neuron.yul":1520:1534   */
      calldatasize
        /* "Neuron.yul":1516:1539   */
      sub
        /* "Neuron.yul":1677:1696   */
      dup1
        /* "Neuron.yul":1673:1675   */
      0x44
        /* "Neuron.yul":1670:1671   */
      0x00
        /* "Neuron.yul":1657:1697   */
      calldatacopy
        /* "Neuron.yul":1784:1786   */
      0x40
        /* "Neuron.yul":1763:1782   */
      dup2
        /* "Neuron.yul":1759:1787   */
      div
        /* "Neuron.yul":1919:1955   */
      tag_24
        /* "Neuron.yul":1949:1954   */
      dup4
        /* "Neuron.yul":1938:1947   */
      dup6
        /* "Neuron.yul":1926:1936   */
      dup4
        /* "Neuron.yul":1919:1955   */
      tag_2
      jump	// in
    tag_24:
        /* "Neuron.yul":1999:2001   */
      dup2
        /* "Neuron.yul":1996:1997   */
      0x00
        /* "Neuron.yul":1989:2002   */
      mstore
        /* "Neuron.yul":2030:2032   */
      dup2
        /* "Neuron.yul":2026:2028   */
      0x20
        /* "Neuron.yul":2019:2033   */
      mstore
        /* "Neuron.yul":2298:2300   */
      0x40
        /* "Neuron.yul":2295:2296   */
      0x00
        /* "Neuron.yul":2288:2301   */
      return
        /* "Neuron.yul":376:2380   */
    tag_18:
      pop
        /* "Neuron.yul":2393:2536   */
      jump(tag_25)
    tag_1:
        /* "Neuron.yul":2416:2417   */
      0x00
        /* "Neuron.yul":2462:2521   */
      0x0100000000000000000000000000000000000000000000000000000000
        /* "Neuron.yul":2458:2459   */
      0x00
        /* "Neuron.yul":2445:2460   */
      calldataload
        /* "Neuron.yul":2441:2522   */
      div
        /* "Neuron.yul":2436:2522   */
      swap1
      pop
        /* "Neuron.yul":2393:2536   */
      swap1
      jump	// out
        /* "Neuron.yul":2660:3062   */
    tag_2:
        /* "Neuron.yul":2709:2711   */
      0x00
        /* "Neuron.yul":2713:2715   */
      dup1
        /* "Neuron.yul":2748:2790   */
      tag_28
        /* "Neuron.yul":2784:2789   */
      dup6
        /* "Neuron.yul":2773:2782   */
      dup6
        /* "Neuron.yul":2761:2771   */
      dup6
        /* "Neuron.yul":2748:2790   */
      tag_3
      jump	// in
    tag_28:
        /* "Neuron.yul":2817:2846   */
      tag_29
        /* "Neuron.yul":2840:2845   */
      dup8
        /* "Neuron.yul":2829:2838   */
      dup8
        /* "Neuron.yul":2825:2827   */
      dup4
        /* "Neuron.yul":2821:2823   */
      dup6
        /* "Neuron.yul":2817:2846   */
      tag_4
      jump	// in
    tag_29:
        /* "Neuron.yul":2807:2846   */
      swap4
      pop
      swap4
      pop
        /* "Neuron.yul":2716:3062   */
      pop
      pop
        /* "Neuron.yul":2660:3062   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":3076:4666   */
    tag_3:
        /* "Neuron.yul":3131:3138   */
      0x00
        /* "Neuron.yul":3140:3147   */
      dup1
        /* "Neuron.yul":3177:3178   */
      0x00
        /* "Neuron.yul":3166:3178   */
      swap2
      pop
        /* "Neuron.yul":3206:3207   */
      0x00
        /* "Neuron.yul":3195:3207   */
      swap1
      pop
        /* "Neuron.yul":3240:3241   */
      0x00
        /* "Neuron.yul":3225:4652   */
    tag_31:
        /* "Neuron.yul":3250:3260   */
      dup4
        /* "Neuron.yul":3247:3248   */
      dup2
        /* "Neuron.yul":3244:3261   */
      lt
        /* "Neuron.yul":3225:4652   */
      iszero
      tag_33
      jumpi
        /* "Neuron.yul":3347:3348   */
      0x02
        /* "Neuron.yul":3344:3345   */
      dup2
        /* "Neuron.yul":3340:3349   */
      mul
        /* "Neuron.yul":3392:3405   */
      dup1
        /* "Neuron.yul":3386:3406   */
      sload
        /* "Neuron.yul":3463:3464   */
      0x01
        /* "Neuron.yul":3448:3461   */
      dup3
        /* "Neuron.yul":3444:3465   */
      add
        /* "Neuron.yul":3427:3465   */
      swap2
      pop
        /* "Neuron.yul":3508:3521   */
      dup2
        /* "Neuron.yul":3502:3522   */
      sload
        /* "Neuron.yul":3593:3595   */
      0x40
        /* "Neuron.yul":3590:3591   */
      dup5
        /* "Neuron.yul":3586:3596   */
      mul
        /* "Neuron.yul":3638:3652   */
      dup1
        /* "Neuron.yul":3632:3653   */
      mload
        /* "Neuron.yul":3712:3714   */
      0x20
        /* "Neuron.yul":3696:3710   */
      dup3
        /* "Neuron.yul":3692:3715   */
      add
        /* "Neuron.yul":3674:3715   */
      swap2
      pop
        /* "Neuron.yul":3757:3771   */
      dup2
        /* "Neuron.yul":3751:3772   */
      mload
        /* "Neuron.yul":3822:3878   */
      tag_34
        /* "Neuron.yul":3868:3877   */
      dup12
        /* "Neuron.yul":3859:3866   */
      dup3
        /* "Neuron.yul":3850:3857   */
      dup5
        /* "Neuron.yul":3840:3848   */
      dup8
        /* "Neuron.yul":3830:3838   */
      dup10
        /* "Neuron.yul":3822:3878   */
      tag_7
      jump	// in
    tag_34:
        /* "Neuron.yul":3920:3978   */
      tag_35
        /* "Neuron.yul":3968:3977   */
      dup14
        /* "Neuron.yul":3957:3966   */
      dup3
        /* "Neuron.yul":3946:3955   */
      dup5
        /* "Neuron.yul":3937:3944   */
      dup14
        /* "Neuron.yul":3928:3935   */
      dup16
        /* "Neuron.yul":3920:3978   */
      tag_5
      jump	// in
    tag_35:
        /* "Neuron.yul":3900:3978   */
      swap11
      pop
      swap11
      pop
        /* "Neuron.yul":3297:4652   */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
        /* "Neuron.yul":3276:3277   */
      0x01
        /* "Neuron.yul":3273:3274   */
      dup2
        /* "Neuron.yul":3269:3278   */
      add
        /* "Neuron.yul":3264:3278   */
      swap1
      pop
        /* "Neuron.yul":3225:4652   */
      jump(tag_31)
    tag_33:
        /* "Neuron.yul":3229:3243   */
      pop
        /* "Neuron.yul":3076:4666   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":4680:5061   */
    tag_4:
        /* "Neuron.yul":4722:4724   */
      0x00
        /* "Neuron.yul":4726:4728   */
      dup1
        /* "Neuron.yul":4763:4778   */
      tag_37
        /* "Neuron.yul":4775:4777   */
      dup5
        /* "Neuron.yul":4771:4773   */
      dup5
        /* "Neuron.yul":4763:4778   */
      tag_6
      jump	// in
    tag_37:
        /* "Neuron.yul":4819:4854   */
      tag_38
        /* "Neuron.yul":4848:4853   */
      dup9
        /* "Neuron.yul":4837:4846   */
      dup9
        /* "Neuron.yul":4832:4835   */
      dup4
        /* "Neuron.yul":4827:4830   */
      dup6
        /* "Neuron.yul":4819:4854   */
      tag_9
      jump	// in
    tag_38:
        /* "Neuron.yul":4902:4938   */
      tag_39
        /* "Neuron.yul":4928:4937   */
      dup10
        /* "Neuron.yul":4922:4926   */
      dup3
        /* "Neuron.yul":4916:4920   */
      dup5
        /* "Neuron.yul":4913:4914   */
      0x00
        /* "Neuron.yul":4910:4911   */
      0x01
        /* "Neuron.yul":4902:4938   */
      tag_5
      jump	// in
    tag_39:
        /* "Neuron.yul":4980:5012   */
      tag_40
        /* "Neuron.yul":5002:5011   */
      dup12
        /* "Neuron.yul":4995:5000   */
      dup3
        /* "Neuron.yul":4988:4993   */
      dup5
        /* "Neuron.yul":4980:5012   */
      tag_8
      jump	// in
    tag_40:
        /* "Neuron.yul":4970:5012   */
      swap8
      pop
      swap8
      pop
        /* "Neuron.yul":4729:5061   */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "Neuron.yul":4680:5061   */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5136:5282   */
    tag_5:
        /* "Neuron.yul":5183:5185   */
      0x00
        /* "Neuron.yul":5187:5189   */
      dup1
        /* "Neuron.yul":5258:5267   */
      dup7
        /* "Neuron.yul":5254:5256   */
      dup7
        /* "Neuron.yul":5250:5252   */
      dup7
        /* "Neuron.yul":5246:5248   */
      dup7
        /* "Neuron.yul":5242:5244   */
      dup7
        /* "Neuron.yul":5218:5268   */
      verbatimbytecode_d0
        /* "Neuron.yul":5208:5268   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5136:5282   */
      swap6
      pop
      swap6
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5318:5426   */
    tag_6:
        /* "Neuron.yul":5346:5348   */
      0x00
        /* "Neuron.yul":5350:5352   */
      dup1
        /* "Neuron.yul":5409:5411   */
      dup4
        /* "Neuron.yul":5405:5407   */
      dup4
        /* "Neuron.yul":5381:5412   */
      verbatimbytecode_d1
        /* "Neuron.yul":5371:5412   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5318:5426   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "Neuron.yul":5465:5611   */
    tag_7:
        /* "Neuron.yul":5512:5514   */
      0x00
        /* "Neuron.yul":5516:5518   */
      dup1
        /* "Neuron.yul":5587:5596   */
      dup7
        /* "Neuron.yul":5583:5585   */
      dup7
        /* "Neuron.yul":5579:5581   */
      dup7
        /* "Neuron.yul":5575:5577   */
      dup7
        /* "Neuron.yul":5571:5573   */
      dup7
        /* "Neuron.yul":5547:5597   */
      verbatimbytecode_d2
        /* "Neuron.yul":5537:5597   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5465:5611   */
      swap6
      pop
      swap6
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":5650:5780   */
    tag_8:
        /* "Neuron.yul":5689:5691   */
      0x00
        /* "Neuron.yul":5693:5695   */
      dup1
        /* "Neuron.yul":5756:5765   */
      dup5
        /* "Neuron.yul":5752:5754   */
      dup5
        /* "Neuron.yul":5748:5750   */
      dup5
        /* "Neuron.yul":5724:5766   */
      verbatimbytecode_d3
        /* "Neuron.yul":5714:5766   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5650:5780   */
      swap4
      pop
      swap4
      swap2
      pop
      pop
      jump	// out
        /* "Neuron.yul":5824:5968   */
    tag_9:
        /* "Neuron.yul":5870:5872   */
      0x00
        /* "Neuron.yul":5874:5876   */
      dup1
        /* "Neuron.yul":5948:5953   */
      dup6
        /* "Neuron.yul":5937:5946   */
      dup6
        /* "Neuron.yul":5933:5935   */
      dup6
        /* "Neuron.yul":5929:5931   */
      dup6
        /* "Neuron.yul":5905:5954   */
      verbatimbytecode_d4
        /* "Neuron.yul":5895:5954   */
      swap2
      pop
      swap2
      pop
        /* "Neuron.yul":5824:5968   */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "Neuron.yul":7473:7595   */
    tag_25:
}

